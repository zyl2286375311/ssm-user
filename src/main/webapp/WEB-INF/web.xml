<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">


  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>
  <!--   spring Web MVC框架提供了org.springframework.web.filter.CharacterEncodingFilter用于解决POST方式造成的中文乱码问题 -->
  <!-- 字符集编码配置 post好使 它的位置一定要是第一个执行的过滤器-->
  <filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <!-- 初始化参数 -->
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <!-- 过滤所有请求 -->
    <url-pattern>/*</url-pattern>
  </filter-mapping>


  <!--  SpringMVC 核心控制器 DispatcherServlet -->
  <!--请求交给Spring Web MVC框架处理，因此我们需要配置Spring的配置文件，
    默认DispatcherServlet会加载WEB-INF/[DispatcherServlet的Servlet名字]-servlet.xml配置文件 -->。

  <servlet>
    <servlet-name>springmvc</servlet-name><!--  springmvc-servlet.xml -->
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!-- 可以自定义servlet.xml配置文件的位置和名称-->
    <init-param>
      <!-- 固定值 -->
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:springmvc-servlet.xml</param-value>
    </init-param>
    <!--         	load-on-startup：表示启动容器时初始化该Servlet的顺序，越小越先加载 -->
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>springmvc</servlet-name>
    <url-pattern>*.do</url-pattern>
  </servlet-mapping>


  <!-- spring监听器  ContextLoaderListener  -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <!-- 加载解析spring相关配置文件 -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:applicationContext.xml</param-value>
  </context-param>


  <!--由Sprng载入的Log4j配置文件位置-->
  <context-param>
    <param-name>log4jConfigLocation</param-name>
    <param-value>classpath:log4j.properties</param-value>
    <!--在这里定位配置文件，需要的是从root开始的绝对路径-->
  </context-param>

  <!--Spring默认刷新Log4j配置文件的间隔,单位为millisecond 毫秒-->
  <context-param>
    <param-name>log4jRefreshInterval</param-name>
    <param-value>60000</param-value>
  </context-param>

  <!--Spring log4j 监听器-->
  <listener>
    <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
  </listener>

  <!-- session超时时间/过期时间，默认为30分钟 -->
  <session-config>
    <session-timeout>30</session-timeout>
  </session-config>

  <!--  验证码 -->
  <servlet>
    <servlet-name>imageCode</servlet-name>
    <servlet-class>org.gb.util.ImageCodeServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>imageCode</servlet-name>
    <url-pattern>/imageCode</url-pattern>
  </servlet-mapping>


</web-app>
